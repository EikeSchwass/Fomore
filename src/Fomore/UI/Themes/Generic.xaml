<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:fa="http://schemas.fontawesome.io/icons/"
                    xmlns:controls="clr-namespace:Fomore.UI.Views.Controls"
                    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                    xmlns:viewModel="clr-namespace:Fomore.UI.ViewModel"
                    xmlns:ui="clr-namespace:Fomore.UI"
                    mc:Ignorable="d">

    <SolidColorBrush x:Key="Level0Brush" Color="#553d2b" />
    <SolidColorBrush x:Key="Level1Brush" Color="#708070" />
    <SolidColorBrush x:Key="Level2Brush" Color="#a0b0a0" />
    <SolidColorBrush x:Key="Level3Brush" Color="#b0c0b0" />
    <SolidColorBrush x:Key="Level4Brush" Color="#c5d5c5" />
    <SolidColorBrush x:Key="Level5Brush" Color="#f0fff0" />
    <Thickness x:Key="ContentMargin">16,24</Thickness>


    <Style TargetType="{x:Type TextBlock}">
        <Setter Property="FontFamily" Value="Segoe UI" />
        <Setter Property="VerticalAlignment" Value="Center" />
    </Style>
    <Style TargetType="{x:Type Menu}">
        <Setter Property="TextBlock.FontSize" Value="18" />
    </Style>
    <Style TargetType="{x:Type fa:ImageAwesome}">
        <Setter Property="Height" Value="16" />
        <Setter Property="Width" Value="16" />
        <Style.Triggers>
            <Trigger Property="Icon" Value="None">
                <Setter Property="Visibility" Value="Collapsed" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style TargetType="{x:Type Border}" x:Key="DefaultBorder">
        <Setter Property="BorderBrush" Value="Black" />
        <Setter Property="BorderThickness" Value="1" />
    </Style>
    <Style TargetType="{x:Type TextBox}">
        <Setter Property="Background" Value="{StaticResource Level1Brush}" />
        <Setter Property="Foreground" Value="{StaticResource Level5Brush}" />
        <Setter Property="FontWeight" Value="Medium" />
        <Setter Property="BorderBrush" Value="Black" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="FontSize" Value="18" />
    </Style>
    <Style TargetType="{x:Type StackPanel}" x:Key="ToolbarStyle">
        <Setter Property="Background" Value="{StaticResource Level2Brush}" />
        <Setter Property="Orientation" Value="Horizontal" />
    </Style>
    <Style TargetType="{x:Type ScrollViewer}">
        <Setter Property="VerticalScrollBarVisibility" Value="Auto" />
    </Style>
    <Style TargetType="{x:Type controls:PanelButton}">
        <Setter Property="Background" Value="{StaticResource Level4Brush}" />
        <Setter Property="IsMouseOverBackgroundBrush" Value="{StaticResource Level5Brush}" />
        <Setter Property="IsPressedBackgroundBrush" Value="{StaticResource Level3Brush}" />
        <Setter Property="IsDisabledBorderBrush" Value="LightGray" />
        <Setter Property="IsDisabledBackgroundBrush" Value="#ededed" />
        <Setter Property="BorderBrush" Value="Black" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Margin" Value="4" />
        <Setter Property="MinHeight" Value="28" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="FontWeight" Value="Normal" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:PanelButton}">
                    <ControlTemplate.Resources>
                        <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource {x:Type TextBlock}}">
                            <Setter Property="FontSize"
                                    Value="{Binding FontSize, RelativeSource={RelativeSource AncestorType={x:Type controls:PanelButton}}}" />
                            <Setter Property="FontWeight"
                                    Value="{Binding FontWeight, RelativeSource={RelativeSource AncestorType={x:Type controls:PanelButton}}}" />
                            <Setter Property="Foreground"
                                    Value="{Binding Foreground, RelativeSource={RelativeSource AncestorType={x:Type controls:PanelButton}}}" />
                        </Style>
                    </ControlTemplate.Resources>
                    <Grid>
                        <Rectangle x:Name="border" Stroke="{TemplateBinding BorderBrush}"
                                   StrokeThickness="{TemplateBinding BorderThickness}"
                                   Fill="{TemplateBinding Background}" SnapsToDevicePixels="True"
                                   RadiusX="{TemplateBinding CornerRadius}"
                                   RadiusY="{TemplateBinding CornerRadius}" />
                        <ContentPresenter x:Name="contentPresenter"
                                          ContentTemplate="{TemplateBinding ContentTemplate}"
                                          Content="{TemplateBinding Content}"
                                          ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                          Focusable="False"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          Margin="{TemplateBinding Padding}" RecognizesAccessKey="True"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDefaulted" Value="True">
                            <Setter Property="Stroke" TargetName="border"
                                    Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Fill" TargetName="border"
                                    Value="{Binding IsMouseOverBackgroundBrush, RelativeSource={RelativeSource AncestorType={x:Type controls:PanelButton}}}" />
                            <Setter Property="Stroke" TargetName="border"
                                    Value="{Binding IsMouseOverBorderBrush, RelativeSource={RelativeSource AncestorType={x:Type controls:PanelButton}}}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Fill" TargetName="border"
                                    Value="{Binding IsPressedBackgroundBrush, RelativeSource={RelativeSource AncestorType={x:Type controls:PanelButton}}}" />
                            <Setter Property="Stroke" TargetName="border"
                                    Value="{Binding IsPressedBorderBrush, RelativeSource={RelativeSource AncestorType={x:Type controls:PanelButton}}}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Fill" TargetName="border"
                                    Value="{Binding IsDisabledBackgroundBrush, RelativeSource={RelativeSource AncestorType={x:Type controls:PanelButton}}}" />
                            <Setter Property="Stroke" TargetName="border"
                                    Value="{Binding IsDisabledBorderBrush, RelativeSource={RelativeSource AncestorType={x:Type controls:PanelButton}}}" />
                            <Setter Property="Foreground"
                                    Value="{Binding IsDisabledForegroundBrush, RelativeSource={RelativeSource AncestorType={x:Type controls:PanelButton}}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type controls:MessageBoxControl}">
        <Setter Property="Background" Value="#a0000000" />
        <Setter Property="MinWidth" Value="256" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:MessageBoxControl}">
                    <Grid Background="{TemplateBinding Background}">
                        <controls:BoxContentPresenter d:DataContext="{d:DesignInstance viewModel:MessageBoxParameters}"
                                                      DataContext="{TemplateBinding MessageBoxParameters}"
                                                      MinWidth="{TemplateBinding MinWidth}"
                                                      MinHeight="{TemplateBinding MinHeight}"
                                                      MaxWidth="{TemplateBinding MaxWidth}"
                                                      MaxHeight="{TemplateBinding MaxHeight}"
                                                      HorizontalAlignment="Center"
                                                      Foreground="{TemplateBinding Foreground}" HeaderFontSize="24"
                                                      VerticalAlignment="Center"
                                                      HeaderContent="{Binding Title}">
                            <controls:BoxContentPresenter.Content>
                                <Grid Margin="4,0">
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="*" />
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition Height="Auto" />
                                    </Grid.RowDefinitions>
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition />
                                        </Grid.ColumnDefinitions>
                                        <fa:ImageAwesome Width="Auto" Height="48" Margin="16"
                                                         Icon="{Binding Path=Icon, Converter={StaticResource MessageBoxIconConverter}}">
                                        </fa:ImageAwesome>
                                        <ContentPresenter Grid.Column="1" Content="{Binding Content}" Margin="8"
                                                          VerticalAlignment="Center">
                                            <ContentPresenter.Resources>
                                                <Style TargetType="{x:Type TextBlock}"
                                                       BasedOn="{StaticResource {x:Type TextBlock}}">
                                                    <Setter Property="Margin" Value="8" />
                                                    <Setter Property="FontSize" Value="16" />
                                                </Style>
                                            </ContentPresenter.Resources>
                                        </ContentPresenter>
                                    </Grid>
                                    <Separator Grid.Row="1" />
                                    <ItemsControl Grid.Row="2" ItemsSource="{Binding MessageBoxCommands}" Margin="4">
                                        <ItemsControl.ItemsPanel>
                                            <ItemsPanelTemplate>
                                                <UniformGrid Columns="{Binding MessageBoxCommands.Count}" Rows="1" />
                                            </ItemsPanelTemplate>
                                        </ItemsControl.ItemsPanel>
                                        <ItemsControl.ItemTemplate>
                                            <DataTemplate DataType="viewModel:MessageBoxCommand">
                                                <controls:PanelButton Command="{Binding InvokeCommand}"
                                                                      CommandParameter="{Binding Parameter}"
                                                                      Content="{Binding Text}" MaxWidth="160" />
                                            </DataTemplate>
                                        </ItemsControl.ItemTemplate>
                                    </ItemsControl>
                                </Grid>
                            </controls:BoxContentPresenter.Content>
                        </controls:BoxContentPresenter>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <DataTrigger
                Binding="{Binding AppState.MessageBox.IsOpened, Source={x:Static ui:App.Instance}, TargetNullValue=False, FallbackValue=False}"
                Value="False">
                <Setter Property="Visibility" Value="Hidden" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

</ResourceDictionary>