<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:fa="http://schemas.fontawesome.io/icons/"
                    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                    xmlns:system="clr-namespace:System;assembly=mscorlib"
                    mc:Ignorable="d">

    <SolidColorBrush x:Key="Level0Brush" Color="#553d2b" />
    <SolidColorBrush x:Key="Level1Brush" Color="#708070" />
    <SolidColorBrush x:Key="Level2Brush" Color="#a0b0a0" />
    <SolidColorBrush x:Key="Level3Brush" Color="#b0c0b0" />
    <SolidColorBrush x:Key="Level4Brush" Color="#c5d5c5" />
    <SolidColorBrush x:Key="Level5Brush" Color="#f0fff0" />
    <Thickness x:Key="ContentMargin">16,24</Thickness>


    <!-- New Color scheme generated by material.io -->
    <SolidColorBrush x:Key="ComboBoxBorderColor" Color="#DDDDDD" />
    <SolidColorBrush x:Key="ListBorderColor" Color="#282828" />
    <SolidColorBrush x:Key="ListColor" Color="#282828" />
    <SolidColorBrush x:Key="ListDisabledColor" Color="#888888" />
    <SolidColorBrush x:Key="ListHoverColor" Color="#444444" />
    <SolidColorBrush x:Key="ListPressedColor" Color="#666666" />
    <SolidColorBrush x:Key="ListSelectedColor" Color="#555555" />
    <SolidColorBrush x:Key="ListButtonBorderColor" Color="#DDDDDD" />

    <SolidColorBrush x:Key="TabBorderColor" Color="#DDDDDD" />
    <SolidColorBrush x:Key="TabColor" Color="#282828" />
    <SolidColorBrush x:Key="TabActiveColor" Color="#444444" />
    <SolidColorBrush x:Key="TabHoverColor" Color="#555555" />

    <SolidColorBrush x:Key="BackgroundColor" Color="#444444" />
    <SolidColorBrush x:Key="BoxColor" Color="#333333" />
    <SolidColorBrush x:Key="BoxInnerColor" Color="#282828" />
    <SolidColorBrush x:Key="BoxBorderColor" Color="#666666" />

    <SolidColorBrush x:Key="ButtonColor" Color="#004ba0" />
    <SolidColorBrush x:Key="ButtonHoverColor" Color="#1976d2" />
    <SolidColorBrush x:Key="ButtonPressedColor" Color="#63a4ff" />

    <SolidColorBrush x:Key="NewColor" Color="#00600f" />
    <SolidColorBrush x:Key="NewHoverColor" Color="#388e3c" />
    <SolidColorBrush x:Key="NewPressedColor" Color="#6abf69" />
    <SolidColorBrush x:Key="DeleteColor" Color="#870000" />
    <SolidColorBrush x:Key="DeleteHoverColor" Color="#bf360c" />
    <SolidColorBrush x:Key="DeletePressedColor" Color="#f9683a" />

    <SolidColorBrush x:Key="CreatureColor" Color="#e53935" />
    <SolidColorBrush x:Key="EnvironmentColor" Color="#43a047" />
    <SolidColorBrush x:Key="MovementPatternColor" Color="#1e88e5" />


    <Style x:Key="StructureGrid" TargetType="Grid">
        <Setter Property="Background" Value="{StaticResource BackgroundColor}" />
    </Style>
    <Style x:Key="DetailsGrid" TargetType="Grid">
        <Setter Property="Margin" Value="5 0 0 0" />
    </Style>
    <Style TargetType="GroupBox">
        <Setter Property="Background" Value="{StaticResource BoxColor}" />
        <Setter Property="BorderBrush" Value="{StaticResource BoxBorderColor}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="HeaderTemplate">
            <Setter.Value>
                <DataTemplate>
                    <StackPanel Background="{StaticResource BoxColor}">
                        <TextBlock Text="{Binding}" HorizontalAlignment="Stretch" Foreground="White" FontWeight="Bold"
                                   Margin="10 5" />
                    </StackPanel>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Margin" Value="5 5 5 10" />
    </Style>
    <Style x:Key="ActionGroupBox" BasedOn="{StaticResource {x:Type GroupBox}}" TargetType="GroupBox">
        <Setter Property="Height" Value="80" />
    </Style>

    <Style x:Key="GroupBoxGrid" TargetType="Grid">
        <Setter Property="Margin" Value="5" />
    </Style>
    <Style x:Key="GroupBoxDockPanel" TargetType="DockPanel">
        <Setter Property="Margin" Value="0 5" />
        <Setter Property="Background" Value="{StaticResource BoxInnerColor}" />
    </Style>

    <Style x:Key="DefaultTextBox" TargetType="TextBox">
        <Setter Property="Background" Value="{StaticResource BoxInnerColor}" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="Padding" Value="2" />
        <Setter Property="Margin" Value="0 5" />
        <Setter Property="TextWrapping" Value="WrapWithOverflow" />
    </Style>

    <Style TargetType="TextBlock">
        <Setter Property="Foreground" Value="White" />
        <Setter Property="VerticalAlignment" Value="Center" />
    </Style>

    <Style x:Key="NoSelectionText" TargetType="TextBlock">
        <Setter Property="Foreground" Value="White" />
        <Setter Property="FontSize" Value="20" />
        <Setter Property="FontStyle" Value="Italic" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Margin" Value="10" />
    </Style>

    <Style TargetType="{x:Type RadioButton}">
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
    </Style>

    <Style TargetType="{x:Type ToolTip}">
        <Setter Property="Background" Value="{StaticResource BackgroundColor}" />
        <Setter Property="Foreground" Value="White" />
    </Style>

    <Style TargetType="{x:Type fa:ImageAwesome}">
        <Setter Property="Height" Value="16" />
        <Setter Property="Width" Value="16" />
        <Style.Triggers>
            <Trigger Property="Icon" Value="None">
                <Setter Property="Visibility" Value="Collapsed" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="DefaultBorder" TargetType="{x:Type Border}">
        <Setter Property="BorderBrush" Value="Black" />
        <Setter Property="BorderThickness" Value="1" />
    </Style>


    <Style x:Key="EditorBackgroundManipulationButton" TargetType="RepeatButton">
        <Setter Property="Margin" Value="1" />
    </Style>
    <Style x:Key="EditorBackgroundManipulationButtonIcon" TargetType="fa:ImageAwesome">
        <Setter Property="Width" Value="40" />
        <Setter Property="Height" Value="40" />
        <Setter Property="Margin" Value="5" />
        <Setter Property="Foreground" Value="{StaticResource ListButtonBorderColor}" />
    </Style>
    <Style x:Key="EditorToolImage" TargetType="Image">
        <Setter Property="Margin" Value="5" />
        <Setter Property="Width" Value="35" />
        <Setter Property="Height" Value="35" />
    </Style>

    <Style x:Key="NewToggleButton" TargetType="{x:Type ToggleButton}" xmlns:s="clr-namespace:System;assembly=mscorlib">
        <Style.BasedOn>
            <Style TargetType="{x:Type ButtonBase}">
                <Style.Resources>
                    <ResourceDictionary />
                </Style.Resources>
                <Setter Property="FocusVisualStyle">
                    <Setter.Value>
                        <Style TargetType="{x:Type IFrameworkInputElement}">
                            <Style.Resources>
                                <ResourceDictionary />
                            </Style.Resources>
                            <Setter Property="Control.Template">
                                <Setter.Value>
                                    <ControlTemplate>
                                        <Rectangle
                                            Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
                                            StrokeThickness="1" StrokeDashArray="1 2" Margin="2,2,2,2"
                                            SnapsToDevicePixels="True" />
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </Setter.Value>
                </Setter>
                <Setter Property="Panel.Background" Value="{StaticResource ListColor}" />
                <Setter Property="Foreground" Value="White" />
                <Setter Property="Border.BorderThickness" Value="1" />
                <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                <Setter Property="VerticalContentAlignment" Value="Stretch" />
                <Setter Property="VerticalAlignment" Value="Center" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ButtonBase}">
                            <Border BorderThickness="{TemplateBinding Border.BorderThickness}"
                                    BorderBrush="{StaticResource ListBorderColor}"
                                    Background="{TemplateBinding Panel.Background}" Name="border"
                                    SnapsToDevicePixels="True">
                                <ContentPresenter RecognizesAccessKey="True"
                                                  Content="{TemplateBinding ContentControl.Content}"
                                                  ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}"
                                                  ContentStringFormat="{TemplateBinding ContentControl.ContentStringFormat}"
                                                  Name="contentPresenter" Margin="{TemplateBinding Control.Padding}"
                                                  HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                                                  VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"
                                                  SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"
                                                  Focusable="False" />
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="Button.IsDefaulted">
                                    <Setter Property="Border.BorderBrush" TargetName="border"
                                            Value="{StaticResource ListBorderColor}" />
                                    <Trigger.Value>
                                        <s:Boolean>
                                            True
                                        </s:Boolean>
                                    </Trigger.Value>
                                </Trigger>
                                <Trigger Property="UIElement.IsMouseOver">
                                    <Setter Property="Panel.Background" TargetName="border"
                                            Value="{StaticResource ListHoverColor}" />
                                    <Setter Property="Border.BorderBrush" TargetName="border"
                                            Value="{StaticResource ListBorderColor}" />
                                    <Trigger.Value>
                                        <s:Boolean>
                                            True
                                        </s:Boolean>
                                    </Trigger.Value>
                                </Trigger>
                                <Trigger Property="ButtonBase.IsPressed">
                                    <Setter Property="Panel.Background" TargetName="border"
                                            Value="{StaticResource ListSelectedColor}" />
                                    <Setter Property="Border.BorderBrush" TargetName="border"
                                            Value="{StaticResource ListBorderColor}" />
                                    <Trigger.Value>
                                        <s:Boolean>
                                            True
                                        </s:Boolean>
                                    </Trigger.Value>
                                </Trigger>
                                <Trigger Property="ToggleButton.IsChecked">
                                    <Setter Property="Panel.Background" TargetName="border"
                                            Value="{StaticResource ListSelectedColor}" />
                                    <Setter Property="Border.BorderBrush" TargetName="border"
                                            Value="{StaticResource ListBorderColor}" />
                                    <Trigger.Value>
                                        <s:Boolean>
                                            True
                                        </s:Boolean>
                                    </Trigger.Value>
                                </Trigger>
                                <Trigger Property="UIElement.IsEnabled">
                                    <Setter Property="Panel.Background" TargetName="border"
                                            Value="{StaticResource ListColor}" />
                                    <Trigger.Value>
                                        <s:Boolean>
                                            False
                                        </s:Boolean>
                                    </Trigger.Value>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </Style.BasedOn>
        <Style.Resources>
            <ResourceDictionary />
        </Style.Resources>
    </Style>

    <Style x:Key="ToolRepeatButton" TargetType="{x:Type RepeatButton}" xmlns:s="clr-namespace:System;assembly=mscorlib">
        <Style.BasedOn>
            <Style TargetType="{x:Type ButtonBase}">
                <Style.Resources>
                    <ResourceDictionary />
                </Style.Resources>
                <Setter Property="FocusVisualStyle">
                    <Setter.Value>
                        <Style TargetType="{x:Type IFrameworkInputElement}">
                            <Style.Resources>
                                <ResourceDictionary />
                            </Style.Resources>
                            <Setter Property="Control.Template">
                                <Setter.Value>
                                    <ControlTemplate>
                                        <Rectangle
                                            Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
                                            StrokeThickness="1" StrokeDashArray="1 2" Margin="2,2,2,2"
                                            SnapsToDevicePixels="True" />
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </Setter.Value>
                </Setter>
                <Setter Property="Panel.Background" Value="{StaticResource ListHoverColor}" />
                <Setter Property="Border.BorderBrush" Value="{StaticResource ListButtonBorderColor}" />
                <Setter Property="TextElement.Foreground" Value="{StaticResource ListButtonBorderColor}" />
                <Setter Property="Margin" Value="1" />
                <Setter Property="Border.BorderThickness">
                    <Setter.Value>
                        <Thickness>
                            1,1,1,1
                        </Thickness>
                    </Setter.Value>
                </Setter>
                <Setter Property="HorizontalContentAlignment">
                    <Setter.Value>
                        <x:Static Member="HorizontalAlignment.Center" />
                    </Setter.Value>
                </Setter>
                <Setter Property="VerticalContentAlignment">
                    <Setter.Value>
                        <x:Static Member="VerticalAlignment.Center" />
                    </Setter.Value>
                </Setter>
                <Setter Property="Padding">
                    <Setter.Value>
                        <Thickness>
                            1,1,1,1
                        </Thickness>
                    </Setter.Value>
                </Setter>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ButtonBase}">
                            <Border BorderThickness="{TemplateBinding Border.BorderThickness}"
                                    BorderBrush="{TemplateBinding Border.BorderBrush}"
                                    Background="{TemplateBinding Panel.Background}" Name="border"
                                    SnapsToDevicePixels="True" CornerRadius="4">
                                <ContentPresenter RecognizesAccessKey="True"
                                                  Content="{TemplateBinding ContentControl.Content}"
                                                  ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}"
                                                  ContentStringFormat="{TemplateBinding ContentControl.ContentStringFormat}"
                                                  Name="contentPresenter" Margin="{TemplateBinding Control.Padding}"
                                                  HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                                                  VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"
                                                  SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"
                                                  Focusable="False" />
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="Button.IsDefaulted">
                                    <Setter Property="Border.BorderBrush" TargetName="border"
                                            Value="{StaticResource ListButtonBorderColor}" />
                                    <Trigger.Value>
                                        <s:Boolean>
                                            True
                                        </s:Boolean>
                                    </Trigger.Value>
                                </Trigger>
                                <Trigger Property="UIElement.IsMouseOver">
                                    <Setter Property="Panel.Background" TargetName="border"
                                            Value="{StaticResource ListSelectedColor}" />
                                    <Setter Property="Border.BorderBrush" TargetName="border"
                                            Value="{StaticResource ListButtonBorderColor}" />
                                    <Trigger.Value>
                                        <s:Boolean>
                                            True
                                        </s:Boolean>
                                    </Trigger.Value>
                                </Trigger>
                                <Trigger Property="ButtonBase.IsPressed">
                                    <Setter Property="Panel.Background" TargetName="border"
                                            Value="{StaticResource ListPressedColor}" />
                                    <Setter Property="Border.BorderBrush" TargetName="border"
                                            Value="{StaticResource ListButtonBorderColor}" />
                                    <Trigger.Value>
                                        <s:Boolean>
                                            True
                                        </s:Boolean>
                                    </Trigger.Value>
                                </Trigger>
                                <Trigger Property="ToggleButton.IsChecked">
                                    <Setter Property="Panel.Background" TargetName="border"
                                            Value="{StaticResource ListPressedColor}" />
                                    <Setter Property="Border.BorderBrush" TargetName="border"
                                            Value="{StaticResource ListButtonBorderColor}" />
                                    <Trigger.Value>
                                        <s:Boolean>
                                            True
                                        </s:Boolean>
                                    </Trigger.Value>
                                </Trigger>
                                <Trigger Property="UIElement.IsEnabled">
                                    <Setter Property="Panel.Background" TargetName="border" Value="{StaticResource ListDisabledColor}" />
                                    <Setter Property="Border.BorderBrush" TargetName="border" Value="{StaticResource ListButtonBorderColor}" />
                                    <Trigger.Value>
                                        <s:Boolean>
                                            False
                                        </s:Boolean>
                                    </Trigger.Value>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </Style.BasedOn>
        <Style.Resources>
            <ResourceDictionary />
        </Style.Resources>
        <Setter Property="Stylus.IsPressAndHoldEnabled">
            <Setter.Value>
                <s:Boolean>
                    False
                </s:Boolean>
            </Setter.Value>
        </Setter>
    </Style>


    <Style TargetType="{x:Type ListBoxItem}" x:Key="DefaultListBoxItem">
        <Style.Resources>
            <ResourceDictionary />
        </Style.Resources>
        <Setter Property="SnapsToDevicePixels">
            <Setter.Value>
                <system:Boolean>
                    True
                </system:Boolean>
            </Setter.Value>
        </Setter>
        <Setter Property="Padding">
            <Setter.Value>
                <Thickness>
                    4,1,4,1
                </Thickness>
            </Setter.Value>
        </Setter>
        <Setter Property="HorizontalContentAlignment">
            <Setter.Value>
                <Binding Path="HorizontalContentAlignment"
                         RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType=ItemsControl, AncestorLevel=1}" />
            </Setter.Value>
        </Setter>
        <Setter Property="VerticalContentAlignment">
            <Setter.Value>
                <Binding Path="VerticalContentAlignment"
                         RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType=ItemsControl, AncestorLevel=1}" />
            </Setter.Value>
        </Setter>
        <Setter Property="Panel.Background" Value="{StaticResource ListColor}" />
        <Setter Property="Border.BorderBrush" Value="{StaticResource ListBorderColor}" />
        <Setter Property="Border.BorderThickness">
            <Setter.Value>
                <Thickness>
                    1,1,1,1
                </Thickness>
            </Setter.Value>
        </Setter>
        <Setter Property="FocusVisualStyle">
            <Setter.Value>
                <Style TargetType="{x:Type IFrameworkInputElement}">
                    <Style.Resources>
                        <ResourceDictionary />
                    </Style.Resources>
                    <Setter Property="Control.Template">
                        <Setter.Value>
                            <ControlTemplate>
                                <Rectangle Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
                                           StrokeThickness="1" StrokeDashArray="1 2" Margin="2,2,2,2"
                                           SnapsToDevicePixels="True" />
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Border BorderThickness="{TemplateBinding Border.BorderThickness}"
                            Padding="{TemplateBinding Control.Padding}"
                            BorderBrush="{TemplateBinding Border.BorderBrush}"
                            Background="{TemplateBinding Panel.Background}" Name="Bd" SnapsToDevicePixels="True">
                        <ContentPresenter Content="{TemplateBinding ContentControl.Content}"
                                          ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}"
                                          ContentStringFormat="{TemplateBinding ContentControl.ContentStringFormat}"
                                          HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"
                                          SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="UIElement.IsMouseOver">
                                    <Condition.Value>
                                        <system:Boolean>
                                            True
                                        </system:Boolean>
                                    </Condition.Value>
                                </Condition>
                            </MultiTrigger.Conditions>
                            <Setter Property="Panel.Background" TargetName="Bd" Value="{StaticResource ListHoverColor}" />
                            <Setter Property="Border.BorderBrush" TargetName="Bd"
                                    Value="{StaticResource ListBorderColor}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Selector.IsSelectionActive">
                                    <Condition.Value>
                                        <system:Boolean>
                                            False
                                        </system:Boolean>
                                    </Condition.Value>
                                </Condition>
                                <Condition Property="Selector.IsSelected">
                                    <Condition.Value>
                                        <system:Boolean>
                                            True
                                        </system:Boolean>
                                    </Condition.Value>
                                </Condition>
                            </MultiTrigger.Conditions>
                            <Setter Property="Panel.Background" TargetName="Bd"
                                    Value="{StaticResource ListSelectedColor}" />
                            <Setter Property="Border.BorderBrush" TargetName="Bd"
                                    Value="{StaticResource ListBorderColor}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Selector.IsSelectionActive">
                                    <Condition.Value>
                                        <system:Boolean>
                                            True
                                        </system:Boolean>
                                    </Condition.Value>
                                </Condition>
                                <Condition Property="Selector.IsSelected">
                                    <Condition.Value>
                                        <system:Boolean>
                                            True
                                        </system:Boolean>
                                    </Condition.Value>
                                </Condition>
                            </MultiTrigger.Conditions>
                            <Setter Property="Panel.Background" TargetName="Bd"
                                    Value="{StaticResource ListSelectedColor}" />
                            <Setter Property="Border.BorderBrush" TargetName="Bd"
                                    Value="{StaticResource ListBorderColor}" />
                        </MultiTrigger>
                        <Trigger Property="UIElement.IsEnabled">
                            <Setter Property="TextElement.Foreground" TargetName="Bd">
                                <Setter.Value>
                                    <DynamicResource ResourceKey="{x:Static SystemColors.GrayTextBrushKey}" />
                                </Setter.Value>
                            </Setter>
                            <Trigger.Value>
                                <system:Boolean>
                                    False
                                </system:Boolean>
                            </Trigger.Value>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="DefaultListBox" TargetType="{x:Type ListBox}" xmlns:s="clr-namespace:System;assembly=mscorlib">
        <Style.Resources>
            <ResourceDictionary />
        </Style.Resources>
        <Setter Property="Panel.Background" Value="{StaticResource ListColor}" />
        <Setter Property="Border.BorderBrush" Value="{StaticResource ListBorderColor}" />
        <Setter Property="Border.BorderThickness" Value="0" />
        <Setter Property="ItemContainerStyle" Value="{StaticResource DefaultListBoxItem}" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility">
            <Setter.Value>
                <x:Static Member="ScrollBarVisibility.Auto" />
            </Setter.Value>
        </Setter>
        <!-- <Setter Property="ScrollViewer.Background" Value="{StaticResource BoxColor}" /> -->
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.CanContentScroll">
            <Setter.Value>
                <s:Boolean>
                    True
                </s:Boolean>
            </Setter.Value>
        </Setter>
        <Setter Property="ScrollViewer.PanningMode">
            <Setter.Value>
                <x:Static Member="PanningMode.Both" />
            </Setter.Value>
        </Setter>
        <Setter Property="Stylus.IsFlicksEnabled">
            <Setter.Value>
                <s:Boolean>
                    False
                </s:Boolean>
            </Setter.Value>
        </Setter>
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBox}">
                    <Border BorderThickness="{TemplateBinding Border.BorderThickness}" Padding="1,1,1,1"
                            BorderBrush="{TemplateBinding Border.BorderBrush}"
                            Background="{TemplateBinding Panel.Background}" Name="Bd" SnapsToDevicePixels="True">
                        <ScrollViewer Padding="{TemplateBinding Control.Padding}" Focusable="False">
                            <ItemsPresenter SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
                        </ScrollViewer>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="UIElement.IsEnabled">
                            <Setter Property="Panel.Background" Value="{StaticResource ListColor}" />
                            <Setter Property="Border.BorderBrush" TargetName="Bd"
                                    Value="{StaticResource ListBorderColor}" />
                            <Trigger.Value>
                                <s:Boolean>
                                    False
                                </s:Boolean>
                            </Trigger.Value>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="ItemsControl.IsGrouping">
                                    <Condition.Value>
                                        <s:Boolean>
                                            True
                                        </s:Boolean>
                                    </Condition.Value>
                                </Condition>
                                <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping">
                                    <Condition.Value>
                                        <s:Boolean>
                                            False
                                        </s:Boolean>
                                    </Condition.Value>
                                </Condition>
                            </MultiTrigger.Conditions>
                            <Setter Property="ScrollViewer.CanContentScroll">
                                <Setter.Value>
                                    <s:Boolean>
                                        False
                                    </s:Boolean>
                                </Setter.Value>
                            </Setter>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style TargetType="{x:Type ListBoxItem}" x:Key="NoColorChangeListBoxItem">
        <Style.Resources>
            <ResourceDictionary />
        </Style.Resources>
        <Setter Property="SnapsToDevicePixels">
            <Setter.Value>
                <system:Boolean>
                    True
                </system:Boolean>
            </Setter.Value>
        </Setter>
        <Setter Property="Padding">
            <Setter.Value>
                <Thickness>
                    4,1,4,1
                </Thickness>
            </Setter.Value>
        </Setter>
        <Setter Property="HorizontalContentAlignment">
            <Setter.Value>
                <Binding Path="HorizontalContentAlignment"
                         RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType=ItemsControl, AncestorLevel=1}" />
            </Setter.Value>
        </Setter>
        <Setter Property="VerticalContentAlignment">
            <Setter.Value>
                <Binding Path="VerticalContentAlignment"
                         RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType=ItemsControl, AncestorLevel=1}" />
            </Setter.Value>
        </Setter>
        <Setter Property="Panel.Background" Value="{StaticResource ListColor}" />
        <Setter Property="Border.BorderBrush" Value="{StaticResource ListBorderColor}" />
        <Setter Property="Border.BorderThickness">
            <Setter.Value>
                <Thickness>
                    1,1,1,1
                </Thickness>
            </Setter.Value>
        </Setter>
        <Setter Property="FocusVisualStyle">
            <Setter.Value>
                <Style TargetType="{x:Type IFrameworkInputElement}">
                    <Style.Resources>
                        <ResourceDictionary />
                    </Style.Resources>
                    <Setter Property="Control.Template">
                        <Setter.Value>
                            <ControlTemplate>
                                <Rectangle Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
                                           StrokeThickness="1" StrokeDashArray="1 2" Margin="2,2,2,2"
                                           SnapsToDevicePixels="True" />
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Border BorderThickness="{TemplateBinding Border.BorderThickness}"
                            Padding="{TemplateBinding Control.Padding}"
                            BorderBrush="{TemplateBinding Border.BorderBrush}"
                            Background="{TemplateBinding Panel.Background}" Name="Bd" SnapsToDevicePixels="True">
                        <ContentPresenter Content="{TemplateBinding ContentControl.Content}"
                                          ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}"
                                          ContentStringFormat="{TemplateBinding ContentControl.ContentStringFormat}"
                                          HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"
                                          SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="UIElement.IsMouseOver">
                                    <Condition.Value>
                                        <system:Boolean>
                                            True
                                        </system:Boolean>
                                    </Condition.Value>
                                </Condition>
                            </MultiTrigger.Conditions>
                            <Setter Property="Panel.Background" TargetName="Bd" Value="{StaticResource ListColor}" />
                            <Setter Property="Border.BorderBrush" TargetName="Bd"
                                    Value="{StaticResource ListBorderColor}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Selector.IsSelectionActive">
                                    <Condition.Value>
                                        <system:Boolean>
                                            False
                                        </system:Boolean>
                                    </Condition.Value>
                                </Condition>
                                <Condition Property="Selector.IsSelected">
                                    <Condition.Value>
                                        <system:Boolean>
                                            True
                                        </system:Boolean>
                                    </Condition.Value>
                                </Condition>
                            </MultiTrigger.Conditions>
                            <Setter Property="Panel.Background" TargetName="Bd"
                                    Value="{StaticResource ListColor}" />
                            <Setter Property="Border.BorderBrush" TargetName="Bd"
                                    Value="{StaticResource ListBorderColor}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Selector.IsSelectionActive">
                                    <Condition.Value>
                                        <system:Boolean>
                                            True
                                        </system:Boolean>
                                    </Condition.Value>
                                </Condition>
                                <Condition Property="Selector.IsSelected">
                                    <Condition.Value>
                                        <system:Boolean>
                                            True
                                        </system:Boolean>
                                    </Condition.Value>
                                </Condition>
                            </MultiTrigger.Conditions>
                            <Setter Property="Panel.Background" TargetName="Bd"
                                    Value="{StaticResource ListColor}" />
                            <Setter Property="Border.BorderBrush" TargetName="Bd"
                                    Value="{StaticResource ListBorderColor}" />
                        </MultiTrigger>
                        <Trigger Property="UIElement.IsEnabled">
                            <Setter Property="TextElement.Foreground" TargetName="Bd">
                                <Setter.Value>
                                    <DynamicResource ResourceKey="{x:Static SystemColors.GrayTextBrushKey}" />
                                </Setter.Value>
                            </Setter>
                            <Trigger.Value>
                                <system:Boolean>
                                    False
                                </system:Boolean>
                            </Trigger.Value>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="NoColorChangeListBox" TargetType="{x:Type ListBox}" xmlns:s="clr-namespace:System;assembly=mscorlib">
        <Style.Resources>
            <ResourceDictionary />
        </Style.Resources>
        <Setter Property="Panel.Background" Value="{StaticResource ListColor}" />
        <Setter Property="Border.BorderBrush" Value="{StaticResource ListBorderColor}" />
        <Setter Property="Border.BorderThickness" Value="0" />
        <Setter Property="ItemContainerStyle" Value="{StaticResource NoColorChangeListBoxItem}" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility">
            <Setter.Value>
                <x:Static Member="ScrollBarVisibility.Auto" />
            </Setter.Value>
        </Setter>
        <!-- <Setter Property="ScrollViewer.Background" Value="{StaticResource BoxColor}" /> -->
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.CanContentScroll">
            <Setter.Value>
                <s:Boolean>
                    True
                </s:Boolean>
            </Setter.Value>
        </Setter>
        <Setter Property="ScrollViewer.PanningMode">
            <Setter.Value>
                <x:Static Member="PanningMode.Both" />
            </Setter.Value>
        </Setter>
        <Setter Property="Stylus.IsFlicksEnabled">
            <Setter.Value>
                <s:Boolean>
                    False
                </s:Boolean>
            </Setter.Value>
        </Setter>
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBox}">
                    <Border BorderThickness="{TemplateBinding Border.BorderThickness}" Padding="1,1,1,1"
                            BorderBrush="{TemplateBinding Border.BorderBrush}"
                            Background="{TemplateBinding Panel.Background}" Name="Bd" SnapsToDevicePixels="True">
                        <ScrollViewer Padding="{TemplateBinding Control.Padding}" Focusable="False">
                            <ItemsPresenter SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
                        </ScrollViewer>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="UIElement.IsEnabled">
                            <Setter Property="Panel.Background" Value="{StaticResource ListColor}" />
                            <Setter Property="Border.BorderBrush" TargetName="Bd"
                                    Value="{StaticResource ListBorderColor}" />
                            <Trigger.Value>
                                <s:Boolean>
                                    False
                                </s:Boolean>
                            </Trigger.Value>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="ItemsControl.IsGrouping">
                                    <Condition.Value>
                                        <s:Boolean>
                                            True
                                        </s:Boolean>
                                    </Condition.Value>
                                </Condition>
                                <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping">
                                    <Condition.Value>
                                        <s:Boolean>
                                            False
                                        </s:Boolean>
                                    </Condition.Value>
                                </Condition>
                            </MultiTrigger.Conditions>
                            <Setter Property="ScrollViewer.CanContentScroll">
                                <Setter.Value>
                                    <s:Boolean>
                                        False
                                    </s:Boolean>
                                </Setter.Value>
                            </Setter>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <!-- <Style x:Key="DefaultComboBoxItem" TargetType="ComboBoxItem"> -->
    <!--     <Setter Property="Panel.Background" Value="{StaticResource ListColor}" /> -->
    <!-- </Style> -->

    <Style x:Key="DefaultComboBoxItem" TargetType="{x:Type ComboBoxItem}"
           xmlns:s="clr-namespace:System;assembly=mscorlib">
        <Style.Resources>
            <ResourceDictionary />
        </Style.Resources>
        <Setter Property="SnapsToDevicePixels">
            <Setter.Value>
                <s:Boolean>
                    True
                </s:Boolean>
            </Setter.Value>
        </Setter>
        <Setter Property="Padding">
            <Setter.Value>
                <Thickness>
                    4,1,4,1
                </Thickness>
            </Setter.Value>
        </Setter>
        <Setter Property="HorizontalContentAlignment">
            <Setter.Value>
                <Binding Path="HorizontalContentAlignment"
                         RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType=ItemsControl, AncestorLevel=1}" />
            </Setter.Value>
        </Setter>
        <Setter Property="VerticalContentAlignment">
            <Setter.Value>
                <Binding Path="VerticalContentAlignment"
                         RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType=ItemsControl, AncestorLevel=1}" />
            </Setter.Value>
        </Setter>
        <Setter Property="Panel.Background" Value="{StaticResource ListColor}" />
        <Setter Property="Border.BorderBrush" Value="{StaticResource ComboBoxBorderColor}" />
        <Setter Property="Border.BorderThickness">
            <Setter.Value>
                <Thickness>
                    1,1,1,1
                </Thickness>
            </Setter.Value>
        </Setter>
        <Setter Property="FocusVisualStyle">
            <Setter.Value>
                <Style TargetType="{x:Type IFrameworkInputElement}">
                    <Style.Resources>
                        <ResourceDictionary />
                    </Style.Resources>
                    <Setter Property="Control.Template">
                        <Setter.Value>
                            <ControlTemplate>
                                <Rectangle Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
                                           StrokeThickness="1" StrokeDashArray="1 2" Margin="2,2,2,2"
                                           SnapsToDevicePixels="True" />
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                    <Border BorderThickness="{TemplateBinding Border.BorderThickness}"
                            Padding="{TemplateBinding Control.Padding}"
                            BorderBrush="{TemplateBinding Border.BorderBrush}"
                            Background="{TemplateBinding Panel.Background}" Name="Bd" SnapsToDevicePixels="True">
                        <ContentPresenter Content="{TemplateBinding ContentControl.Content}"
                                          ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}"
                                          ContentStringFormat="{TemplateBinding ContentControl.ContentStringFormat}"
                                          HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"
                                          SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="UIElement.IsEnabled">
                            <Setter Property="TextElement.Foreground" TargetName="Bd">
                                <Setter.Value>
                                    <DynamicResource ResourceKey="{x:Static SystemColors.GrayTextBrushKey}" />
                                </Setter.Value>
                            </Setter>
                            <Trigger.Value>
                                <s:Boolean>
                                    False
                                </s:Boolean>
                            </Trigger.Value>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Selector.IsSelected">
                                    <Condition.Value>
                                        <s:Boolean>
                                            False
                                        </s:Boolean>
                                    </Condition.Value>
                                </Condition>
                                <Condition Property="UIElement.IsMouseOver">
                                    <Condition.Value>
                                        <s:Boolean>
                                            True
                                        </s:Boolean>
                                    </Condition.Value>
                                </Condition>
                                <Condition Property="UIElement.IsKeyboardFocused">
                                    <Condition.Value>
                                        <s:Boolean>
                                            False
                                        </s:Boolean>
                                    </Condition.Value>
                                </Condition>
                            </MultiTrigger.Conditions>
                            <Setter Property="Panel.Background" TargetName="Bd" Value="{StaticResource ListHoverColor}" />
                            <Setter Property="Border.BorderBrush" TargetName="Bd"
                                    Value="{StaticResource ComboBoxBorderColor}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Selector.IsSelected">
                                    <Condition.Value>
                                        <s:Boolean>
                                            True
                                        </s:Boolean>
                                    </Condition.Value>
                                </Condition>
                                <Condition Property="UIElement.IsMouseOver">
                                    <Condition.Value>
                                        <s:Boolean>
                                            False
                                        </s:Boolean>
                                    </Condition.Value>
                                </Condition>
                                <Condition Property="UIElement.IsKeyboardFocused">
                                    <Condition.Value>
                                        <s:Boolean>
                                            True
                                        </s:Boolean>
                                    </Condition.Value>
                                </Condition>
                            </MultiTrigger.Conditions>
                            <Setter Property="Panel.Background" TargetName="Bd"
                                    Value="{StaticResource ListSelectedColor}" />
                            <Setter Property="Border.BorderBrush" TargetName="Bd"
                                    Value="{StaticResource ComboBoxBorderColor}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Selector.IsSelected">
                                    <Condition.Value>
                                        <s:Boolean>
                                            True
                                        </s:Boolean>
                                    </Condition.Value>
                                </Condition>
                                <Condition Property="UIElement.IsMouseOver">
                                    <Condition.Value>
                                        <s:Boolean>
                                            True
                                        </s:Boolean>
                                    </Condition.Value>
                                </Condition>
                            </MultiTrigger.Conditions>
                            <Setter Property="Panel.Background" TargetName="Bd"
                                    Value="{StaticResource ListSelectedColor}" />
                            <Setter Property="Border.BorderBrush" TargetName="Bd"
                                    Value="{StaticResource ComboBoxBorderColor}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Selector.IsSelected">
                                    <Condition.Value>
                                        <s:Boolean>
                                            True
                                        </s:Boolean>
                                    </Condition.Value>
                                </Condition>
                                <Condition Property="UIElement.IsMouseOver">
                                    <Condition.Value>
                                        <s:Boolean>
                                            False
                                        </s:Boolean>
                                    </Condition.Value>
                                </Condition>
                                <Condition Property="UIElement.IsKeyboardFocused">
                                    <Condition.Value>
                                        <s:Boolean>
                                            False
                                        </s:Boolean>
                                    </Condition.Value>
                                </Condition>
                            </MultiTrigger.Conditions>
                            <Setter Property="Panel.Background" TargetName="Bd"
                                    Value="{StaticResource ListSelectedColor}" />
                            <Setter Property="Border.BorderBrush" TargetName="Bd"
                                    Value="{StaticResource ComboBoxBorderColor}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Selector.IsSelected">
                                    <Condition.Value>
                                        <s:Boolean>
                                            False
                                        </s:Boolean>
                                    </Condition.Value>
                                </Condition>
                                <Condition Property="UIElement.IsMouseOver">
                                    <Condition.Value>
                                        <s:Boolean>
                                            False
                                        </s:Boolean>
                                    </Condition.Value>
                                </Condition>
                                <Condition Property="UIElement.IsKeyboardFocused">
                                    <Condition.Value>
                                        <s:Boolean>
                                            True
                                        </s:Boolean>
                                    </Condition.Value>
                                </Condition>
                            </MultiTrigger.Conditions>
                            <Setter Property="Panel.Background" TargetName="Bd" Value="{StaticResource ListHoverColor}" />
                            <Setter Property="Border.BorderBrush" TargetName="Bd"
                                    Value="{StaticResource ComboBoxBorderColor}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Selector.IsSelected">
                                    <Condition.Value>
                                        <s:Boolean>
                                            False
                                        </s:Boolean>
                                    </Condition.Value>
                                </Condition>
                                <Condition Property="UIElement.IsMouseOver">
                                    <Condition.Value>
                                        <s:Boolean>
                                            True
                                        </s:Boolean>
                                    </Condition.Value>
                                </Condition>
                                <Condition Property="UIElement.IsKeyboardFocused">
                                    <Condition.Value>
                                        <s:Boolean>
                                            True
                                        </s:Boolean>
                                    </Condition.Value>
                                </Condition>
                            </MultiTrigger.Conditions>
                            <Setter Property="Panel.Background" TargetName="Bd" Value="{StaticResource ListHoverColor}" />
                            <Setter Property="Border.BorderBrush" TargetName="Bd"
                                    Value="{StaticResource ComboBoxBorderColor}" />
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <!-- <Style x:Key="DefaultComboBox" TargetType="{x:Type ComboBox}"> -->
    <!--     <Setter Property="Width" Value="200" /> -->
    <!--     <Setter Property="HorizontalAlignment" Value="Left" /> -->
    <!--     <Setter Property="ItemContainerStyle" Value="{StaticResource DefaultComboBoxItem}" /> -->
    <!-- </Style> -->

    <ControlTemplate x:Key="ComboBoxToggleButton" TargetType="ToggleButton">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition Width="20" />
            </Grid.ColumnDefinitions>
            <Border
                x:Name="Border"
                Grid.ColumnSpan="2"
                CornerRadius="2"
                Background="{StaticResource ListColor}"
                BorderBrush="{StaticResource ComboBoxBorderColor}"
                BorderThickness="1" />
            <Border
                Grid.Column="0"
                CornerRadius="2,0,0,2"
                Margin="1"
                Background="{StaticResource ListColor}"
                BorderBrush="{StaticResource ComboBoxBorderColor}"
                BorderThickness="0,0,1,0" />
            <Path
                x:Name="Arrow"
                Grid.Column="1"
                Fill="{StaticResource ComboBoxBorderColor}"
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                Data="M 0 0 L 4 4 L 8 0 Z" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="ToggleButton.IsMouseOver" Value="true">
                <Setter TargetName="Border" Property="Background" Value="{StaticResource ListHoverColor}" />
            </Trigger>
            <Trigger Property="ToggleButton.IsChecked" Value="true">
                <Setter TargetName="Border" Property="Background" Value="{StaticResource ListPressedColor}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter TargetName="Border" Property="Background" Value="{StaticResource ListColor}" />
                <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource ListColor}" />
                <Setter Property="Foreground" Value="White" />
                <Setter TargetName="Arrow" Property="Fill" Value="{StaticResource ComboBoxBorderColor}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="ComboBoxTextBox" TargetType="TextBox">
        <Border x:Name="PART_ContentHost" Focusable="False" Background="{TemplateBinding Background}" />
    </ControlTemplate>

    <Style x:Key="DefaultComboBox" TargetType="ComboBox">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.CanContentScroll" Value="true" />
        <Setter Property="MinWidth" Value="120" />
        <Setter Property="Width" Value="200" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="MinHeight" Value="20" />
        <Setter Property="ItemContainerStyle" Value="{StaticResource DefaultComboBoxItem}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBox">
                    <Grid>
                        <ToggleButton
                            Name="ToggleButton"
                            Template="{StaticResource ComboBoxToggleButton}"
                            Grid.Column="0"
                            Focusable="false"
                            IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}"
                            ClickMode="Press" />
                        <ContentPresenter
                            Name="ContentSite"
                            IsHitTestVisible="False"
                            Content="{TemplateBinding SelectionBoxItem}"
                            ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                            ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                            Margin="3,3,23,3"
                            VerticalAlignment="Center"
                            HorizontalAlignment="Left" />
                        <TextBox x:Name="PART_EditableTextBox"
                                 Style="{x:Null}"
                                 Template="{StaticResource ComboBoxTextBox}"
                                 HorizontalAlignment="Left"
                                 VerticalAlignment="Center"
                                 Margin="3,3,23,3"
                                 Focusable="True"
                                 Background="Transparent"
                                 Visibility="Hidden"
                                 IsReadOnly="{TemplateBinding IsReadOnly}" />
                        <Popup
                            Name="Popup"
                            Placement="Bottom"
                            IsOpen="{TemplateBinding IsDropDownOpen}"
                            AllowsTransparency="True"
                            Focusable="False"
                            PopupAnimation="Slide">
                            <Grid
                                Name="DropDown"
                                SnapsToDevicePixels="True"
                                MinWidth="{TemplateBinding ActualWidth}"
                                MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                <Border
                                    x:Name="DropDownBorder"
                                    Background="{StaticResource ListColor}"
                                    BorderThickness="1"
                                    BorderBrush="{StaticResource ComboBoxBorderColor}" />
                                <ScrollViewer Margin="4,6,4,6" SnapsToDevicePixels="True">
                                    <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
                                </ScrollViewer>
                            </Grid>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasItems" Value="false">
                            <Setter TargetName="DropDownBorder" Property="MinHeight" Value="95" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="White" />
                        </Trigger>
                        <Trigger Property="IsGrouping" Value="true">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
                        </Trigger>
                        <Trigger SourceName="Popup" Property="Popup.AllowsTransparency" Value="true">
                            <Setter TargetName="DropDownBorder" Property="CornerRadius" Value="4" />
                            <Setter TargetName="DropDownBorder" Property="Margin" Value="0,2,0,0" />
                        </Trigger>
                        <Trigger Property="IsEditable"
                                 Value="true">
                            <Setter Property="IsTabStop" Value="false" />
                            <Setter TargetName="PART_EditableTextBox" Property="Visibility" Value="Visible" />
                            <Setter TargetName="ContentSite" Property="Visibility" Value="Hidden" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="DefaultTabControlItem" TargetType="{x:Type TabItem}">
        <!-- <Setter Property="MaxWidth" Value="100" /> -->
        <Setter Property="Height" Value="50" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="FontWeight" Value="Bold" />
        <!--https://social.msdn.microsoft.com/forums/vstudio/en-US/df4f7fc3-f0ec-4ed1-a022-a32650e49cb3/how-to-wrap-header-text-in-tabcontrol-->
        <Setter Property="HeaderTemplate">
            <Setter.Value>
                <DataTemplate>
                    <TextBlock Text="{Binding}" TextWrapping="Wrap" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabItem}">
                    <Border x:Name="Border" Cursor="Hand"
                            Margin="0"
                            VerticalAlignment="Stretch"
                            HorizontalAlignment="Stretch"
                            BorderThickness="1"
                            BorderBrush="{StaticResource TabBorderColor}"
                            Background="{DynamicResource TabColor}">
                        <ContentPresenter x:Name="Content" VerticalAlignment="Center" HorizontalAlignment="Stretch"
                                          ContentSource="Header" RecognizesAccessKey="True"
                                          TextBlock.TextAlignment="Center" TextBlock.FontSize="16" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Foreground" Value="White" />
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource TabActiveColor}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Foreground" Value="White" />
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource TabHoverColor}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="DefaultTabControl" TargetType="{x:Type TabControl}">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="ItemContainerStyle" Value="{StaticResource DefaultTabControlItem}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabControl}">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>

                        <Border>
                            <UniformGrid x:Name="HeaderPanel" IsItemsHost="True"
                                         Rows="1" />
                        </Border>

                        <Border x:Name="Border" Grid.Row="1"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{StaticResource TabColor}"
                                BorderBrush="{StaticResource TabBorderColor}">
                            <ContentPresenter x:Name="PART_SelectedContentHost" ContentSource="SelectedContent" />
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="ToolbarStyle" TargetType="{x:Type StackPanel}">
        <Setter Property="Background" Value="{StaticResource BackgroundColor}" />
        <Setter Property="Orientation" Value="Horizontal" />
    </Style>
    <Style TargetType="{x:Type ScrollViewer}">
        <Setter Property="VerticalScrollBarVisibility" Value="Auto" />
    </Style>
</ResourceDictionary>